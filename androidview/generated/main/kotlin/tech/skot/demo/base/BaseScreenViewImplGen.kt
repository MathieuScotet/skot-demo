// //### Generated by SKot do not modify
package tech.skot.demo.base

import androidx.viewbinding.ViewBinding
import kotlin.Boolean
import kotlin.Function0
import kotlin.Pair
import kotlin.String
import kotlin.Unit
import tech.skot.components.MaxScreenViewImpl
import tech.skot.demo.android.BaseActivity
import tech.skot.demo.android.BaseFragment
import tech.skot.demo.base.BaseActionsAction
import tech.skot.demo.base.treatAction
import tech.skot.view.Action

abstract class BaseScreenViewImplGen<A : BaseActivity, F : BaseFragment, B : ViewBinding> :
    MaxScreenViewImpl<A, F, B>(), BaseScreenView {
  private lateinit var baseActionsImpl: BaseActionsImpl

  override fun initWith(
    activity: A,
    fragment: F?,
    binding: B
  ) {
    baseActionsImpl = BaseActionsImpl(activity, fragment)
    super.initWith(activity, fragment, binding)
  }

  final override fun closeKeyboard() {
    messages.post(BaseActionsAction.CloseKeyboard)
  }

  final override fun confirm(
    title: String?,
    message: String?,
    okLabel: String?,
    koLabel: String?,
    onOk: Function0<Unit>
  ) {
    messages.post(BaseActionsAction.Confirm(title, message, okLabel, koLabel, onOk))
  }

  final override fun displayAlert(
    title: String?,
    message: String?,
    onOk: Function0<Unit>?
  ) {
    messages.post(BaseActionsAction.DisplayAlert(title, message, onOk))
  }

  final override fun openExternalNavigator(url: String) {
    messages.post(BaseActionsAction.OpenExternalNavigator(url))
  }

  final override fun snack(
    message: String,
    long: Boolean,
    action: Pair<String, Function0<Unit>>?
  ) {
    messages.post(BaseActionsAction.Snack(message, long, action))
  }

  final override fun toast(
    message: String,
    top: Boolean,
    long: Boolean
  ) {
    messages.post(BaseActionsAction.Toast(message, top, long))
  }

  override fun treatAction(action: Action) {
    when (action) {
      is BaseActionsAction -> baseActionsImpl.treatAction(action)
      else -> super.treatAction(action)
    }
  }
}
